<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ************************************************************* -->
<!-- mapper 태그 선언 -->
<!-- ************************************************************* -->
<mapper namespace="com.naver.erp.BoardDAO">

	<!-- ************************************************************* -->
	<!-- 게시판 글 목록 구할 때 사용할 where절을 sql 태그 안에 선언하기 -->
	<!-- ************************************************************* -->
	<sql id="boardWhere">
		<!-- ************************************************************* -->
		<!-- 만약, BoardSearchDTO 객체의 속성변수 keyword1에 문자열이 있거나 속성변수 keyword2에 문자열이 있으면 -->
		<!-- ************************************************************* -->
		<if test="keyword1!=null and keyword1.length()>0 or keyword2!=null and keyword2.length()>0">
			and (
		</if>
		
		<!-- ************************************************************* -->
		<!-- 만약, BoardSearchDTO 객체의 속성변수 keyword1에 문자열이 있으면 -->
		<!-- ************************************************************* -->
		<if test="keyword1!=null and keyword1.length()>0">
			 (
				upper(subject) like upper('%${keyword1}%')
				or upper(content) like upper('%${keyword1}%')
				or upper(writer) like upper('%${keyword1}%')
				or upper(email) like upper('%${keyword1}%')
				or to_char(reg_date, 'yyyy-mm-dd') like '%${keyword1}%' 
			)
		</if>
		
		<!-- ************************************************************* -->
		<!-- 만약, BoardSearchDTO 객체의 속성변수 keyword1에 문자열이 있고, 속성변수 keyword2에 문자열이 있으면 -->
		<!-- BoardSearchDTO 객체의 속성변수 orAnd에 문자열을 싱글쿼터 안붙이고 그대로 표현하기 -->
		<!-- ************************************************************* -->
		<if test="keyword1!=null and keyword1.length()>0 and keyword2!=null and keyword2.length()>0">
			${orAnd} 
		</if>
		
		<!-- ************************************************************* -->
		<!-- 만약, BoardSearchDTO 객체의 속성변수 keyword2에 문자열이 있으면 -->
		<!-- ************************************************************* -->
		<if test="keyword2!=null and keyword2.length()>0">
			 (
				upper(subject) like upper('%${keyword2}%')
				or upper(content) like upper('%${keyword2}%')
				or upper(writer) like upper('%${keyword2}%')
				or upper(email) like upper('%${keyword2}%')
				or to_char(reg_date, 'yyyy-mm-dd') like '%${keyword2}%' 	
			)
		</if>
		
		<!-- ************************************************************* -->
		<!-- 만약, BoardSearchDTO 객체의 속성변수 keyword1에 문자열이 있거나 속성변수 keyword2에 문자열이 있으면 -->
		<!-- ************************************************************* -->
		<if test="keyword1!=null and keyword1.length()>0 or keyword2!=null and keyword2.length()>0">
			)
		</if>
		
		
		<!-- ************************************************************* -->
		<!-- 만약 BoardSearchDTO 객체의 속성변수 day가 null이 아니고 저장된 개수가 0보다 크면 -->
		<!-- ************************************************************* -->
		<if test="day != null and day.size() > 0">
			and
			<!-- ************************************************************* -->
			<!-- [mybatis의 반복문]을 사용하여 BoardSearchDTO 객체의 속성변수 day에 --> 
			<!-- 들어 있는 데이터를 꺼내어 검색 조건 SQL문 만들기 -->
			<!-- ************************************************************* -->
			<!-- [mybatis foreach 반복문]의 속성 설명 -->
			<!-- collection="이 쿼리문에 참여하는 외부 데이터 중 배열 또는 ArrayList 객체의 메위주가 저장된 변수명" -->
			<!-- item="반복문 돌때마다 배열객체 또는 ArrayList 객체 안의 데이터를 하나씩 꺼내서 저장할 지역변수명" -->
			<!-- open="반복문 시작 전에 삽입할 문자" -->
			<!-- close="반복문 끝난 후에 삽입할 문자" -->
			<!-- separator="반복문에 의해 표현되는 쿼리문 사이 사이에 삽입될 쿼리 일부분" -->
			<!-- separator는 반복문이 한 번만 돈다면 들어가지 않음, 2회 이상인 경우에만 해당한다 -->
			<!-- index="반복문안에서 사용할 인덱스 일련 번호 저장 지역변수명" -->
			<!-- ************************************************************* -->
			<foreach collection="day" item="day" open="(" separator=" or " close=")" index="idx">
				<!-- ************************************************************* -->
				<!-- 만약, 지역변수 day에 '오늘'라는 문자가 들어있으면 -->
				<!-- ************************************************************* -->
				<if test="day.equals('오늘')">
					to_char(reg_date, 'yyyymmdd') = to_char(sysdate, 'yyyymmdd')
				</if>
				
				<!-- ************************************************************* -->
				<!-- 만약, 지역변수 day에 '어제'라는 문자가 들어있으면 -->
				<!-- ************************************************************* -->
				<if test="day.equals('어제')">
					to_char(reg_date, 'yyyymmdd') = to_char(sysdate-1, 'yyyymmdd')
				</if>
				
				<!-- ************************************************************* -->
				<!-- 만약, 지역변수 day에 '그제'라는 문자가 들어있으면 -->
				<!-- ************************************************************* -->
				<if test="day.equals('그제')">
					to_char(reg_date, 'yyyymmdd') = to_char(sysdate-2, 'yyyymmdd')
				</if>

				<!-- ************************************************************* -->
				<!-- 만약, 지역변수 day에 '일주일내'라는 문자가 들어있으면 -->
				<!-- ************************************************************* -->
				<if test="day.equals('일주일내')">
					to_char(reg_date, 'yyyymmdd') between to_char(sysdate-7, 'yyyymmdd') and to_char(sysdate, 'yyyymmdd')
				</if>
			</foreach>
			
		</if>
	</sql>
	

	<!-- ************************************************************* -->
	<!-- 게시판 글 입력하는 insert 문을 내포한 insert 태그 선언 -->
	<!-- ************************************************************* -->
	<!-- parameterType 속성은 안에 내장된 쿼리 호출하면서 삽입되는 데이터의 자료형을 지정함 -->
	<!-- insert 태그안에는 resultType 속성이 없다. 리턴값은 자동으로 int 형이다 -->
	<!-- insert, update, delete 태그도 동일하다 -->
	<!-- ************************************************************* -->
	<insert id="insertBoard" parameterType="com.naver.erp.BoardDTO">
		insert into board(
			b_no
			,subject
			,writer
			,readcount
			,content
			,pwd
			,email
			,group_no
			,print_no
			,print_level
		) values(
			(select nvl(max(b_no),0)+1 from board)
			,#{subject}  	<!-- BoardDTO 객체의 subject 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,#{writer}      <!-- BoardDTO 객체의 writer 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,0
			,#{content}     <!-- BoardDTO 객체의 content 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,#{pwd}         <!-- BoardDTO 객체의 pwd 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,#{email}       <!-- BoardDTO 객체의 email 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			
			<!-- ************************************************************* -->
			<!-- 만약에 자바의 BoardDTO 객체의 속성변수 b_no가 0 이면, 즉 새글쓰기 모드면-->
			<!-- 그룹번호를 PK 값으로, 출력순서 번호와 들여쓰기 레벨은 0으로 입력하기 -->
			<!-- ************************************************************* -->
			<if test="b_no==0">
			,(select nvl(max(b_no),0)+1 from board)
			,0
			,0
			</if>

			<!-- ************************************************************* -->
			<!-- 만약에, 자바의 BoardDTO 객체의 속성변수 b_no가 0보다 크면, 즉 댓글쓰기 모드면 -->
			<!-- 그룹번호를 엄마 PK 번호로, 출력순서 번호와 들여쓰기 레벨은 엄마꺼보다 1 더 큰 값으로 입력하기 -->
			<!-- ************************************************************* -->
			<if test="b_no>0">
			,(select group_no from board where b_no=#{b_no})
			,(select print_no+1 from board where b_no=#{b_no})
			,(select print_level+1 from board where b_no=#{b_no})
			</if>
		)
	</insert>
	
	<!-- ************************************************************* -->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!-- resultType은 한 행의 데이터를 담을 자료형을 써주면 된다 -->
	<!-- 컬럼명 또는 alias가 키값으로 들어간다 -->
	<!-- 즉, readcount, reg_date는 alias를 부여해야 한다. -->
	<!-- varchar2(=문자형)으로 자료형을 통일해야 한다. (=resultType이 HashMap<String, String> 이므로 -->
	<!-- ************************************************************* -->
	<select id="getBoardList" parameterType="com.naver.erp.BoardSearchDTO" resultType="java.util.HashMap">
		select * from ( select rownum as "RNUM", zxc.* from (
			select b_no||'' as "B_NO"
				, subject, writer, readcount||'' as "READCOUNT"
			    , to_char(reg_date, 'yyyy-mm-dd(dy)', 'nls_date_language=korean') as "REG_DATE" 
			    , print_level||'' as "PRINT_LEVEL"
			from board
			where 
				1=1 
				<!-- ************************************************************* -->
				<!-- <sql id="boardWhere"> 태그 안에 삽입된 SQL 구문 삽입하기 -->
				<!-- ************************************************************* -->
				<include refid="boardWhere"/>
			
			order by 	
				<if test="sort == null or sort.length() == 0">
					group_no desc, print_no
				</if>		
	
				<if test="sort != null and sort.length() > 0">
					${sort}
				</if>
		) zxc
		
		<!-- 아래 태그 사이에 들어간 부등호를 부등호로 인정한다. --> 
		<!-- ${} 데이터를 꺼낼 때 연산을 할 수 있다. 단, 띄어쓰기는 없어야 한다. -->
		<![CDATA[
			where rownum <= ${selectPageNo*rowCntPerPage} ) 
			where rnum >= ${selectPageNo*rowCntPerPage-rowCntPerPage+1}
		]]>
	</select>
	
	<!-- ************************************************************* -->
	<!-- 게시판 글 목록 총 개수 구하는 select 태그 선언 -->
	<!-- ************************************************************* -->
	<select id="getBoardListAllCnt" parameterType="com.naver.erp.BoardSearchDTO" resultType="int">
		select 
			count(*) 
		from 
			board
		where 
			1=1 
			<!-- ************************************************************* -->
			<!-- <sql id="boardWhere"> 태그 안에 삽입된 SQL 구문 삽입하기 -->
			<!-- ************************************************************* -->
			<include refid="boardWhere"/>
			
	</select>
	
	
	<!-- ************************************************************* -->
	<!-- 게시판 1개 글 검색하는 select 문을 내포한 select 태그 선언 -->
	<!-- 오라클의 자료형과 DTO 객체의 속성변수 자료형과 일치해야 한다. -->
	<!-- 컬럼명/alias와 DTO 객체의 속성변수명과 일치해야 한다. -->
	<!-- ************************************************************* -->
	<select id="getBoard" parameterType="int" resultType="com.naver.erp.BoardDTO">
		select
			b_no			"b_no"
			,subject		"subject"
			,writer			"writer"
			,reg_date		"reg_date"
			,readcount		"readcount"
			,content		"content"
			,pwd			"pwd"
			,email			"email"
			,group_no		"group_no"
			,print_no		"print_no"
			,print_level	"print_level"
		from board
		where b_no = #{b_no}		
	</select>
	
	<!-- ************************************************************* -->
	<!-- 조회수 1 증가하는 즉, 수정하는 update 문을 내포한 update 태그 선언 -->
	<!-- ************************************************************* -->
	<update id="updateReadcount" parameterType="int">
		update board set readcount = readcount+1 where b_no = #{b_no}
	</update>
	
	<!-- ************************************************************* -->
	<!-- 삭제/수정할 게시판의 존재 개수를 리턴하는 select 선언 -->
	<!-- ************************************************************* -->
	<select id="getBoardCnt" parameterType="com.naver.erp.BoardDTO" resultType="int">
		select count(*) from board where b_no=#{b_no}
	</select>
	
	<!-- ************************************************************* -->
	<!-- 삭제/수정할 게시판의 비밀번호 개수를 리턴하는 select 선언 -->
	<!-- ************************************************************* -->
	<select id="getPwdCnt" parameterType="com.naver.erp.BoardDTO" resultType="int">
		select count(*) from board where pwd=#{pwd} and b_no=#{b_no}
	</select>
	
	<!-- ************************************************************* -->
	<!-- 게시판 수정하는 update 문을 내포한 update 태그 선언 -->
	<!-- ************************************************************* -->
	<update id="updateBoard"  parameterType="com.naver.erp.BoardDTO">
		update 
			board 
		set 
			writer=#{writer}
			,subject=#{subject}
			,email=#{email}
			,content=#{content} 
		where 
			b_no=#{b_no} and pwd=#{pwd}
	</update>
	
	<!-- ************************************************************* -->
	<!-- 삭제할 게시판의 자식글 존재 개수를 리턴하는 select 문을 내포한 select 태그 선언  -->
	<!-- ************************************************************* -->
	<select id="getChildrenCnt" parameterType="com.naver.erp.BoardDTO" resultType="int">
		select count(*) from board 
		where group_no = (select group_no from board where b_no=#{b_no})
		    and print_no = (select print_no+1 from board where b_no=#{b_no})
		    and print_level = (select print_level+1 from board where b_no=#{b_no})		
	</select>
	
	<!-- ************************************************************* -->
	<!-- 삭제될 게시판 이후 글의 출력 순서번호를 1씩 감소 시킨 후 수정하는 update 문을 내포한 update 태그 선언 -->
	<!-- ************************************************************* -->
	<update id="downPrintNo" parameterType="com.naver.erp.BoardDTO">
		update board set print_no = print_no-1
		where group_no = (select group_no from board where b_no=#{b_no})
			and print_no > (select print_no from board where b_no=#{b_no})		
	</update>
	
	<!-- ************************************************************* -->
	<!-- 게시판 삭제하는 delete 문을 내포한 delete 태그 선언 -->
	<!-- ************************************************************* -->
	<delete id="deleteBoard" parameterType="com.naver.erp.BoardDTO">
		delete from board where b_no=#{b_no} and pwd=#{pwd}
	</delete>
	
	<!-- ************************************************************* -->
	<!-- 게시판 글 출력 번호 1 증가하는 update문을 내포한 update 태그 선언 -->
	<!-- ************************************************************* -->
	<update id="updatePrintNo" parameterType="com.naver.erp.BoardDTO">
		update board set print_no=print_no+1 
		where group_no=(select group_no from board where b_no=#{b_no})
			and print_no > (select print_no from board where b_no=#{b_no})
	</update>

</mapper>