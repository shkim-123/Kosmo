<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ************************************************************* -->
<!-- mapper 태그 선언 -->
<!-- ************************************************************* -->
<mapper namespace="com.naver.erp.BoardDAO">

	<!-- ************************************************************* -->
	<!-- 게시판 글 입력하는 insert 문을 내포한 insert 태그 선언 -->
	<!-- ************************************************************* -->
	<!-- parameterType 속성은 안에 내장된 쿼리 호출하면서 삽입되는 데이터의 자료형을 지정함 -->
	<!-- insert 태그안에는 resultType 속성이 없다. 리턴값은 자동으로 int 형이다 -->
	<!-- insert, update, delete 태그도 동일하다 -->
	<!-- ************************************************************* -->
	<insert id="insertBoard" parameterType="com.naver.erp.BoardDTO">
		insert into board(
			b_no
			,subject
			,writer
			,readcount
			,content
			,pwd
			,email
			,group_no
			,print_no
			,print_level
		) values(
			(select nvl(max(b_no),0)+1 from board)
			,#{subject}  	<!-- BoardDTO 객체의 subject 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,#{writer}      <!-- BoardDTO 객체의 writer 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,0
			,#{content}     <!-- BoardDTO 객체의 content 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,#{pwd}         <!-- BoardDTO 객체의 pwd 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,#{email}       <!-- BoardDTO 객체의 email 속성변수 안의 값 삽입하기, 문자면 ' 를 앞뒤에 붙여준다 -->
			,(select nvl(max(b_no),0)+1 from board)
			,0
			,0
		)
	</insert>
	
	<!-- ************************************************************* -->
	<!-- 게시판 검색하는 select 문을 내포한 select 태그 선언 -->
	<!-- resultType은 한 행의 데이터를 담을 자료형을 써주면 된다 -->
	<!-- 컬럼명 또는 alias가 키값으로 들어간다 -->
	<!-- 즉, readcount, reg_date는 alias를 부여해야 한다. -->
	<!-- varchar2(=문자형)으로 자료형을 통일해야 한다. (=resultType이 HashMap<String, String> 이므로 -->
	<!-- ************************************************************* -->
	<select id="getBoardList" resultType="java.util.HashMap">
		select b_no||'' as "B_NO"
			, subject, writer, readcount||'' as "READCOUNT"
		    , to_char(reg_date, 'yyyy-mm-dd day', 'nls_date_language=korean') as "REG_DATE" 
		    , print_level||'' as "PRINT_LEVEL"
		from board 
		order by group_no desc, print_no
	</select>
	
	<!-- ************************************************************* -->
	<!-- 게시판 1개 글 검색하는 select 문을 내포한 select 태그 선언 -->
	<!-- 오라클의 자료형과 DTO 객체의 속성변수 자료형과 일치해야 한다. -->
	<!-- 컬럼명/alias와 DTO 객체의 속성변수명과 일치해야 한다. -->
	<!-- ************************************************************* -->
	<select id="getBoard" parameterType="int" resultType="com.naver.erp.BoardDTO">
		select
			b_no			"b_no"
			,subject		"subject"
			,writer			"writer"
			,reg_date		"reg_date"
			,readcount		"readcount"
			,content		"content"
			,pwd			"pwd"
			,email			"email"
			,group_no		"group_no"
			,print_no		"print_no"
			,print_level	"print_level"
		from board
		where b_no = #{b_no}		
	</select>
	
	<!-- ************************************************************* -->
	<!-- 조회수 1 증가하는 즉, 수정하는 update 문을 내포한 update 태그 선언 -->
	<!-- ************************************************************* -->
	<update id="updateReadcount" parameterType="int">
		update board set readcount = readcount+1 where b_no = #{b_no}
	</update>
	
	<!-- 게시글 작성자, 제목, 이메일, 내용을 업데이트하는 update 태그 선언 -->
	<update id="boardUpdate" parameterType="com.naver.erp.BoardDTO">
		update board set writer=#{writer}, subject=#{subject}, email=#{email}, content=#{content} where b_no=#{b_no}
	</update>
	
	<!-- 비밀번호를 리턴하는 select 태그 선언 -->
	<select id="getPwd" parameterType="int" resultType="String">
		select pwd from board where b_no=#{b_no}
	</select>
	
	<!-- 게시글 삭제하는 delete 태그 선언 -->
	<delete id="boardDelete" parameterType="com.naver.erp.BoardDTO">
		delete from board where b_no=#{b_no}
	</delete>


</mapper>